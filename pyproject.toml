[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "importnb"
description = ''
readme = "README.md"
requires-python = ">=3.7"
license = "BSD-3-Clause"
keywords = []
authors = [{ name = "tonyfast", email = "tony.fast@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Natural Language :: English",
  "Framework :: IPython",
  "Framework :: Jupyter",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "License :: OSI Approved :: BSD License",
]
dependencies = [] # no dependencies!
dynamic = ["version"]

[project.optional-dependencies]
interactive = ["IPython"]

[project.entry-points.pytest11]
importnb = "importnb.utils.pytest_importnb"

[project.scripts]
importnb = "importnb.__main__:main"

[project.urls]
Documentation = "https://github.com/deathbeds/importnb#readme"
Issues = "https://github.com/deathbeds/importnb/issues"
Source = "https://github.com/deathbeds/importnb"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/importnb/_version.py"

[tool.hatch.build.hooks.custom]
dependencies = ["lark"]

[tool.doit]
backend = "json"
verbosity = 2

[tool.doit.commands.list]
status = true
subtasks = true

[tool.isort]
profile = "black"

[tool.black]
line_length = 100

[tool.hatch.envs.test]
dependencies = ["pytest", "pytest-cov"]

[[tool.hatch.envs.test.matrix]]
version = ["stdlib", "interactive"]

[tool.hatch.envs.test.overrides]
matrix.version.dependencies = [{ value = "IPython", if = ["interactive"] }]

[tool.hatch.envs.test.scripts]
cov = "pytest"

[tool.pytest.ini_options]
addopts = "-pno:warnings --cov importnb --cov-report html --cov-report term"

[tool.coverage.report]
omit = ["src/importnb/_json_parser.py", "tests/*"]

[tool.coverage.html]
directory = "docs/coverage"
